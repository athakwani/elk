{
  ports:
  [
    "80:80",
    "5044:5044"
  ],
  volumes:
  [
    "/var/log:/var/log"
  ],
  dependencies: 
  [
    {
      name: "linux-dependencies",
      cmd:
      '''
        apt-get install -y software-properties-common python-software-properties
        add-apt-repository -y ppa:webupd8team/java
        apt-get update -y
        echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
        echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections
        apt-get -y install oracle-java8-installer openssl unzip curl wget apt-transport-https gettext vim
      '''
    },
    {
      name: "elk",
      cmd:
      '''
        echo 'deb http://packages.elastic.co/logstash/2.2/debian stable main' | tee /etc/apt/sources.list.d/logstash-2.2.x.list
        echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" | tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
        echo "deb http://packages.elastic.co/kibana/4.4/debian stable main" | tee -a /etc/apt/sources.list.d/kibana-4.4.x.list
        wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
        apt-get -y update
        apt-get -y install logstash elasticsearch kibana
        mkdir -p /var/log/logstash
        sed -i.bak 's/.*server.host:.*/server.host: "localhost"/g' /opt/kibana/config/kibana.yml
        sed -i.bak 's/.*network.host:.*/network.host: localhost/g' /etc/elasticsearch/elasticsearch.yml
      '''
    },    
    {
      name: "filebeat",
      cmd:
      '''
        echo "deb https://packages.elastic.co/beats/apt stable main" | tee -a /etc/apt/sources.list.d/beats.list
        wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | apt-key add -
        apt-get -y update
        apt-get -y install filebeat
      '''
    },
    {
      name: "nginx",
      cmd:
      '''
        apt-get install -y nginx apache2-utils
        htpasswd -b -c /etc/nginx/htpasswd.users admin kibana
        mkdir -p /var/log/nginx
      '''
    }
  ],
  commands: {
    start: [{
      server:
      '''
        export SERVER_IP=$SERVER_IP
        # Copy Config files
        envsubst < $REPO_ROOT/openssl.cnf > /etc/ssl/openssl.cnf 
        envsubst < $REPO_ROOT/filebeat.yml > /etc/filebeat/filebeat.yml
        eval "echo \"$(<$REPO_ROOT/nginx.config)\""  > /etc/nginx/sites-available/default  
        cp $REPO_ROOT/02-beats-input.conf /etc/logstash/conf.d/
        cp $REPO_ROOT/10-syslog-filter.conf /etc/logstash/conf.d/
        cp $REPO_ROOT/30-elasticsearch-output.conf /etc/logstash/conf.d/

        # Generate Certificate
        mkdir -p /etc/pki/tls/certs
        mkdir /etc/pki/tls/private      
        cd /etc/pki/tls
        openssl req -config /etc/ssl/openssl.cnf -x509 -days 3650 -batch -nodes -newkey rsa:2048 -keyout private/logstash-forwarder.key -out certs/logstash-forwarder.crt
        CERT="$(cat /etc/pki/tls/certs/logstash-forwarder.crt)"
        _export CERT
        
        # Start services
        service elasticsearch start
        service logstash start
        service nginx start
        
        # Start Filebeat
        daemon --name="filebeat" --output=filebeat.out -F /var/run/filebeat.pid -D $REPO_ROOT -X /usr/bin/filebeat -- -c /etc/filebeat/filebeat.yml
        
        # Start Kibana
        daemon --name="kibana" --output=kibana.out -F /var/run/kibana.pid -D $REPO_ROOT -X /opt/kibana/bin/../node/bin/node --  /opt/kibana/bin/../src/cli
        
         # Check for Server start
         timeout 20 bash -c -- "while true; do wget -q --retry-connrefused \
         --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --continue localhost:9200 >/dev/null 2>&1; \
         if [ $? = 0 ]; then break; fi; sleep 2s; done"

         # Report status
         _exit_code=$?   
         if [[ $_exit_code -eq 0 ]]
         then
        # Configure Kibana
            cd $HOME
            curl -L -O https://download.elastic.co/beats/dashboards/beats-dashboards-1.1.0.zip
            unzip beats-dashboards-*.zip
            cd beats-dashboards-*
            ./load.sh
            curl -O https://gist.githubusercontent.com/thisismitch/3429023e8438cc25b86c/raw/d8c479e2a1adcea8b1fe86570e42abab0f10f364/filebeat-index-template.json
            curl -XPUT 'http://localhost:9200/_template/filebeat?pretty' -d@filebeat-index-template.json
         else
             echo -e "Failed to configure Kibana"
         fi

      '''
    },{
      client:
      '''
        mkdir -p $HOME/.elk
        echo "$CERT" > $HOME/.elk/logstash-forwarder.crt
        open http://$SERVER_IP:
      '''
    }],
    stop: [{
      server:
      '''
      '''
    }],    
    logs: [{
      server:
      '''
      '''
    }]
  }
}
